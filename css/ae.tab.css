/* ==========================================
 * TABBED BOX
 * ======================================= */

/*
.tab is defined as :

<div class="tab" data-tab="1">
	<div onclick="
		if( event.target == this || !this.contains(event.target) ) return;
		this.parentNode.dataset.tab = Array.from(this.children).indexOf(event.target)+1;
		this.parentNode.className = this.parentNode.className;
	">
		<span>header1</span>
		<span>header2</span>
	</div>
	<div>
		<whatever>content1</whatever>
		<whatever>content2</whatever>
	</div>
</div>

Node.div({className: 'tab', dataset: {tab: 1}},
[
	Node.div({click: function(e)
	{
		if( e.target == this || !this.contains(e.target) ) return;
		this.parentNode.dataset.tab = Array.from(this.children).indexOf(e.target)+1;
		this.parentNode.className = this.parentNode.className;
	}},
	[
		Node.span("header1"),
		Node.span("header2")
	]),
	Node.div([
		Node.div("content1"),
		Node.div("content2")
	])
])

CAUTION : css nth-child is 1-based while child index() is 0-based, this is why we do +1
CAUTION : some browser will not reflow the CSS until you force it to, this is why we re-assign the className to itself
*/

.tab > div { margin: 0; }
.tab > div:first-of-type { 
	overflow: hidden; text-align: left; white-space: nowrap; position: relative;
	flex-direction: row; display: flex; flex-wrap: nowrap; justify-content: flex-start; align-items: stretch; 
}
.tab > div:first-of-type:after { 
	display: inline-block; border-bottom: 1px solid #dddddd; content: ""; 
	vertical-align: bottom; flex-grow: 1; min-width: 0;
}
.tab > div:first-of-type > span
{
	font-size: 16px;
	padding: 15px 30px;
	padding-bottom: 16px;
	color: #4b4b4b;
	border-bottom: 1px solid #dddddd;
	text-transform: uppercase;
	display: inline-block;
	cursor: pointer;
	flex-grow: 0;
	white-space: nowrap; 
	overflow: hidden;
	text-overflow: ellipsis;
	min-width: 35px;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	font-weight: 300;
}
.tab > div:first-of-type > span:hover { color: var(--accent); } 
.tab > div:last-of-type 
{
	padding: 20px; position: relative;
}
.tab[data-tab="1"] > div:first-of-type > :nth-child(1),
.tab[data-tab="2"] > div:first-of-type > :nth-child(2),
.tab[data-tab="3"] > div:first-of-type > :nth-child(3),
.tab[data-tab="4"] > div:first-of-type > :nth-child(4),
.tab[data-tab="5"] > div:first-of-type > :nth-child(5),
.tab[data-tab="6"] > div:first-of-type > :nth-child(6),
.tab[data-tab="7"] > div:first-of-type > :nth-child(7),
.tab[data-tab="8"] > div:first-of-type > :nth-child(8),
.tab[data-tab="9"] > div:first-of-type > :nth-child(9),
.tab[data-tab="10"] > div:first-of-type > :nth-child(10) { 
	border-bottom: 2px solid var(--accent); 
	padding-bottom: 15px;
	color: #000; font-weight: 400;
}
.tab[data-tab="1"] > div:last-of-type > :not(:nth-child(1)),
.tab[data-tab="2"] > div:last-of-type > :not(:nth-child(2)),
.tab[data-tab="3"] > div:last-of-type > :not(:nth-child(3)),
.tab[data-tab="4"] > div:last-of-type > :not(:nth-child(4)),
.tab[data-tab="5"] > div:last-of-type > :not(:nth-child(5)),
.tab[data-tab="6"] > div:last-of-type > :not(:nth-child(6)),
.tab[data-tab="7"] > div:last-of-type > :not(:nth-child(7)),
.tab[data-tab="8"] > div:last-of-type > :not(:nth-child(8)),
.tab[data-tab="9"] > div:last-of-type > :not(:nth-child(9)),
.tab[data-tab="10"] > div:last-of-type > :not(:nth-child(10)) { display: none; }

/* ============== VERTICAL TABS ============== */

.vtab { display: flex; align-items: stretch; }
.vtab > div { margin: 0; }
.vtab > div:first-of-type { 
	flex-grow: 0; overflow: hidden; text-align: left; white-space: nowrap; position: relative;
	flex-direction: column; display: flex; flex-wrap: nowrap; justify-content: flex-start; align-items: stretch; 
}
.vtab > div:first-of-type:after { 
	display: inline-block; border-right: 1px solid #dddddd; content: ""; 
	vertical-align: bottom; flex-grow: 1; min-width: 0;
}
.vtab > div:first-of-type > span
{
	font-size: 16px;
	padding: 15px 15px;
	padding-right: 16px;
	color: #4b4b4b;
	border-right: 1px solid #dddddd;
	text-transform: uppercase;
	display: inline-block;
	cursor: pointer;
	flex-grow: 0;
	white-space: nowrap; 
	overflow: hidden;
	text-overflow: ellipsis;
	min-width: 35px;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	font-weight: 300;
}
.vtab > div:first-of-type > span:hover { color: var(--accent); } 
.vtab > div:last-of-type 
{
	flex-grow: 1;
	padding: 20px; position: relative;
}
.vtab[data-tab="1"] > div:first-of-type > :nth-child(1),
.vtab[data-tab="2"] > div:first-of-type > :nth-child(2),
.vtab[data-tab="3"] > div:first-of-type > :nth-child(3),
.vtab[data-tab="4"] > div:first-of-type > :nth-child(4),
.vtab[data-tab="5"] > div:first-of-type > :nth-child(5),
.vtab[data-tab="6"] > div:first-of-type > :nth-child(6),
.vtab[data-tab="7"] > div:first-of-type > :nth-child(7),
.vtab[data-tab="8"] > div:first-of-type > :nth-child(8),
.vtab[data-tab="9"] > div:first-of-type > :nth-child(9),
.vtab[data-tab="10"] > div:first-of-type > :nth-child(10) { 
	border-right: 2px solid var(--accent);
	padding-right: 15px;
	color: var(--accent); font-weight: 400;
}
.vtab[data-tab="1"] > div:last-of-type > :not(:nth-child(1)),
.vtab[data-tab="2"] > div:last-of-type > :not(:nth-child(2)),
.vtab[data-tab="3"] > div:last-of-type > :not(:nth-child(3)),
.vtab[data-tab="4"] > div:last-of-type > :not(:nth-child(4)),
.vtab[data-tab="5"] > div:last-of-type > :not(:nth-child(5)),
.vtab[data-tab="6"] > div:last-of-type > :not(:nth-child(6)),
.vtab[data-tab="7"] > div:last-of-type > :not(:nth-child(7)),
.vtab[data-tab="8"] > div:last-of-type > :not(:nth-child(8)),
.vtab[data-tab="9"] > div:last-of-type > :not(:nth-child(9)),
.vtab[data-tab="10"] > div:last-of-type > :not(:nth-child(10)) { display: none; }